<p id="notice"><%= notice %></p>
<div id="window">
  <div id="playground">
    <div class="concept" id="initial">Laura</div>
  </div>
</div>
<div id="controls">
  <table>
    <tbody>
      <% @concepts.each do |concept| %>
        <tr>
          <td><%= concept.content %></td>
          <td><%= link_to 'Show', concept %></td>
          <td><%= link_to 'Edit', edit_concept_path(concept) %></td>
          <td><%= link_to 'Destroy', concept, method: :delete, data: { confirm: 'Are you sure?' } %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <%= link_to 'New Concept', new_concept_path %>
  <br>
  <button id="random-button">Create Random</button>
  <button id="related-button">Create Related</button>
</div>

<script type="text/javascript">
function start(){

function parseRelated(){
  var url_related = 'http://es.wikipedia.org/w/api.php?action=query&prop=categories&format=json&titles=Albert%20Einstein&rnlimit=10&format=json&callback=?';
  return ajaxCall(url_related)
}

function ajaxCall(url){
  return $.ajax({
      url: url,
      dataType: 'json',
    });
}

  function getIdeas(type){
    var url = "";
    switch(type) {
    case 'random':
      url = "http://es.wikipedia.org/w/api.php?action=query&list=random&rnnamespace=0&rnlimit=10&iwurl=&redirects=&converttitles=&format=json&callback=?";
        break;
    case 'related':
      parseRelated().done(function(data){console.log('parsed ', data)});
      break;
    }

    return $.ajax({
      url: url,
      dataType: 'json',
    });
  }

  function createIdeas(id, type){
    getIdeas(type).done(function(data){

      var parent_top = parsePx(d3.select('#initial').style('top'));
      var parent_left = parsePx(d3.select('#initial').style('left'));

      // $.each(data.query.random, function( index, value ) {
      function sign(){ return Math.random() < 0.5 ? -1 : 1};
      function delay(){ return (Math.random() * 5000) };
      console.log('delay',delay() )
      function left(){ return parent_left + (( Math.random()  + 200 ) *  sign() ) };
      var duration = 3000;

      var  new_concept = d3.select("#playground").selectAll('div').data(data.query.random)
                            .enter().append('div').attr('class', 'concept random')
                            .style('top', function(data){ return sign() * 10 + 'px' })
                            .style('left', function(data){ return left() +'px'  })
                            .html(function(data) { return data.title; });

      dead_concept = new_concept
                  .transition().delay(delay).duration(duration).style({'opacity':'1'})
                  .transition().duration(duration).style({'opacity':'0'})
                  .duration(duration).attr('data-status','dead')
                  .remove();
       // });
    });
  }
  // createIdeas("#initial","random");
  d3.select('#random-button').on("click", function(){ createIdeas("#initial","random")} );
  d3.select('#related-button').on("click", function(){ createIdeas("#initial","related")} );


  function parsePx(string){
    return parseInt(string.replace('px',''));
  }


}
</script>

<!--
<script type="text/javascript">
var graph = new joint.dia.Graph;
var paper = new joint.dia.Paper({
    el: $('#playground'),
    width: 600,
    height: 200,
    model: graph,
    gridSize: 1
});
<% @concepts.each_with_index do |concept, index| %>
  var r<%= concept.id %> = new joint.shapes.basic.Rect({
      position: { x: <%= 10 + (index * 100)%>, y: 30 },
      size: { width: 100, height: 30 },
      attrs: { rect: { fill: 'blue', rx: 10,
      ry: 10 },
      text: { text: '<%= concept.content %>', fill: 'white', 'font-variant': 'small-caps'} }
  });
  r<%= concept.id %>.attr('rect/filter', { name: 'dropShadow', args: { dx: 2, dy: 2, blur: 3 } });
<% end %>
var rect2 = new joint.shapes.basic.Rect({
    position: { x: 100, y: 30 },
    size: { width: 100, height: 30 },
    attrs: { rect: { fill: 'red', rx: 10,
    ry: 10 }, text: { text: 'Renacimiento', fill: 'white', 'font-variant': 'small-caps' } }
});
rect2.attr('rect/filter', { name: 'dropShadow', args: { dx: 2, dy: 2, blur: 3 } });
rect2.translate(300);

<% @concepts.each do |concept| %>
  var link<%= concept.id %> = new joint.dia.Link({
      source: { id: r<%= concept.id %>.id },
      target: { id: rect2.id }
  });
link<%= concept.id %>.attr({
    '.connection': { stroke: 'blue' },
});
<% end %>

graph.addCells([
  <% @concepts.each do |concept| %>
  r<%= concept.id %>,
  <% end %>
   rect2,
  <% @concepts.each do |concept| %>
  link<%= concept.id %>,
  <% end %>
   ]);
// graph.on('all', function(eventName, cell) {
//     console.log(arguments);
// });
</script>
 -->